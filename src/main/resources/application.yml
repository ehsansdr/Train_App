spring:


  kafka:
#    bootstrap-servers: 192.168.110.243:9000
    bootstrap-servers: 192.168.110.243:19091 # By adding this line to /etc/hosts:     192.168.110.243 kafka1
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

# for pre-build part
#  kafka:
#    # Kafka producer settings
#    producer:
#      bootstrap-servers: 192.168.110.243:19091  # Kafka broker to connect to (IP:port)
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer  # Serializer for the key (converts key into byte array)
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer  # Serializer for the value (converts value into byte array)

  #    # Kafka consumer settings
  #    consumer:
  #      bootstrap-servers: kafka1:19091  # Kafka broker to connect to (IP:port)
  #      group-id: test-group  # Consumer group id. Kafka uses this to group consumers together
  #      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # Deserializer for the key (converts byte array into key)
  #      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # Deserializer for the value (converts byte array into value)

  datasource:
    url: jdbc:mysql://localhost:3306/train_db  # Replace with your DB name
    username: root  # Your MySQL username (NOT root for production!)
    password: P@ssw0rd # Your MySQL password
    driver-class-name: com.mysql.cj.jdbc.Driver # Essential for MySQL

  jpa:
    hibernate:
      ddl-auto: update # Or create, none, validate, etc.  'update' is good for development
    show-sql: true  # Optional: Show SQL in console (for debugging)
    properties:
      hibernate.format_sql: true # Optional: Format SQL in logs
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
  # Optional - If you want to configure a naming strategy for your tables/columns
  # jpa:
  #   hibernate:
  #     naming:
  #       physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # Or a custom strategy

server:
  port: 8080 # Or your preferred port


# Logging configuration (optional)
logging:
  level:
    root: INFO  # Or DEBUG for more detailed output
    org.hibernate.SQL: DEBUG # To see SQL statements
    org.hibernate.type.descriptor.sql: TRACE # To see data binding


my:
  kafka:
    topic: "kafka_training_Es"
